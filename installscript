#!/bin/bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Add global gitignore
ln -s $HOME/.dotfiles/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

# Symlink vim prefs
rm $HOME/.vimrc
ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc
rm $HOME/.vim
ln -s $HOME/.dotfiles/shell/.vim $HOME/.vim

echo 'Install composer'
echo '----------------'
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
mv composer.phar /usr/local/bin/composer

if [[ "$OSTYPE" == "darwin"* ]]; then
	# MacOS specific
	echo 'Install homebrew'
	echo '----------------'
	echo install homebrew
	sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
	ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

	echo 'Install node'
	echo '-----------'
	brew install node

	echo 'Install wget'
	echo '------------'
	brew install wget --overwrite

	echo 'Install httpie'
	echo '--------------'
	brew install httpie

	echo 'Install php'
	echo '-----------'
	brew install php@7.0
	brew install php@7.1
	brew install php@7.2
	brew install php@7.4

	echo 'Install imagemagick'
	echo '-------------------'
	brew install imagemagick

	echo 'Install imagick'
	echo '---------------'
	pecl install imagick

	echo 'Install xdebug'
	echo '--------------'
	pecl install xdebug

	echo 'Install redis'
	echo '-------------'
	brew install redis
	brew services start redis
	pecl install redis

	echo 'Install laravel valet'
	echo '---------------------'
	composer global require laravel/valet
	valet install

	echo 'Install mysql'
	echo '-------------'
	brew install mariadb
	brew services start mariadb

	echo 'Install yarn'
	echo '------------'
	brew install yarn

	echo 'Install git flow avh'
	echo '------------'
	brew install git-flow-avh

	echo 'Install gitk'
	echo '------------'
	brew install gitk

fi

if [[ "$OSTYPE" == "linux-gnu" ]]; then
	# GNU Linux specific
	echo 'Updating repository...'
	echo '-----------'
	apt update

	echo 'Install build essential'
	echo '-----------'
	apt install build-essential

	echo 'Install node'
	echo '-----------'
	apt install nodejs

	echo 'Install curl'
	echo '------------'
	apt install curl

	echo 'Install wget'
	echo '------------'
	apt install wget

	echo 'Install httpie'
	echo '--------------'
	apt install httpie

	echo 'Install apache2'
	echo '-----------'
	apt install apache2

	echo 'Install php'
	echo '-----------'
	apt install php7.0
	apt install php7.1
	apt install php7.2
	apt install php7.4
	apt install php-pear
	apt install libapache2-mod-php
	apt install php-mysql

	echo 'Install imagemagick'
	echo '-------------------'
	apt install imagemagick

	echo 'Install imagick'
	echo '---------------'
	apt install php-imagick

	echo 'Install xdebug'
	echo '--------------'
	pecl install xdebug

	echo 'Install redis'
	echo '-------------'
	apt install redis-server
	pecl install redis

	echo 'Install mysql'
	echo '-------------'
	apt install mariadb-server

	echo 'Install yarn'
	echo '------------'
	apt install yarn

	echo 'Install git flow avh'
	echo '------------'
	apt install git-flow

	echo 'Install gitk'
	echo '------------'
	apt install gitk
fi

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'